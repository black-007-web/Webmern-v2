{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAZARY\\\\Downloads\\\\mern-web\\\\mern-library\\\\client\\\\src\\\\pages\\\\BookList.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst books = [{\n  title: \"1984\",\n  author: \"George Orwell\",\n  image: \"https://covers.openlibrary.org/b/id/7222246-L.jpg\"\n}, {\n  title: \"The Alchemist\",\n  author: \"Paulo Coelho\",\n  image: \"https://covers.openlibrary.org/b/id/8231851-L.jpg\"\n}\n// Add more books as needed...\n];\nconst BookList = () => {\n  _s();\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState(null);\n  useEffect(() => {\n    const storedToken = localStorage.getItem('token');\n    const storedUser = JSON.parse(localStorage.getItem('user'));\n    if (storedToken && storedUser) {\n      setToken(storedToken);\n      setUser(storedUser);\n    }\n  }, []);\n  const handleBuy = async book => {\n    if (!token || !user) {\n      alert('Please login first');\n      return;\n    }\n    if (window.confirm(`Do you want to buy \"${book.title}\"?`)) {\n      try {\n        await axios.post('http://localhost:5000/api/books/buy', book, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        alert('Book added to your profile');\n      } catch (err) {\n        alert('Error buying book');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"book-list\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Available Books\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"books\",\n      children: books.map((book, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"book-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: book.image,\n          alt: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: book.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: book.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleBuy(book),\n          children: \"Buy\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 13\n        }, this)]\n      }, i, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n};\n_s(BookList, \"JqgLHTQ5K29GvKYJOSbipjzu19E=\");\n_c = BookList;\nexport default BookList;\nvar _c;\n$RefreshReg$(_c, \"BookList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jsxDEV","_jsxDEV","books","title","author","image","BookList","_s","token","setToken","user","setUser","storedToken","localStorage","getItem","storedUser","JSON","parse","handleBuy","book","alert","window","confirm","post","headers","Authorization","err","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","i","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/HAZARY/Downloads/mern-web/mern-library/client/src/pages/BookList.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\n\r\nconst books = [\r\n  { title: \"1984\", author: \"George Orwell\", image: \"https://covers.openlibrary.org/b/id/7222246-L.jpg\" },\r\n  { title: \"The Alchemist\", author: \"Paulo Coelho\", image: \"https://covers.openlibrary.org/b/id/8231851-L.jpg\" },\r\n  // Add more books as needed...\r\n];\r\n\r\nconst BookList = () => {\r\n  const [token, setToken] = useState('');\r\n  const [user, setUser] = useState(null);\r\n\r\n  useEffect(() => {\r\n    const storedToken = localStorage.getItem('token');\r\n    const storedUser = JSON.parse(localStorage.getItem('user'));\r\n    if (storedToken && storedUser) {\r\n      setToken(storedToken);\r\n      setUser(storedUser);\r\n    }\r\n  }, []);\r\n\r\n  const handleBuy = async (book) => {\r\n    if (!token || !user) {\r\n      alert('Please login first');\r\n      return;\r\n    }\r\n\r\n    if (window.confirm(`Do you want to buy \"${book.title}\"?`)) {\r\n      try {\r\n        await axios.post('http://localhost:5000/api/books/buy', book, {\r\n          headers: { Authorization: `Bearer ${token}` },\r\n        });\r\n        alert('Book added to your profile');\r\n      } catch (err) {\r\n        alert('Error buying book');\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"book-list\">\r\n      <h2>Available Books</h2>\r\n      <div className=\"books\">\r\n        {books.map((book, i) => (\r\n          <div key={i} className=\"book-card\">\r\n            <img src={book.image} alt={book.title} />\r\n            <h4>{book.title}</h4>\r\n            <p>{book.author}</p>\r\n            <button onClick={() => handleBuy(book)}>Buy</button>\r\n          </div>\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BookList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}