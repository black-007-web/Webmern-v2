{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAZARY\\\\Downloads\\\\mern-web\\\\mern-library\\\\client\\\\src\\\\pages\\\\AdminLogin.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminLogin = () => {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const navigate = useNavigate();\n  const handleAdminLogin = async e => {\n    e.preventDefault();\n    try {\n      const res = await axios.post('/api/admin/login', {\n        email,\n        password\n      });\n      localStorage.setItem('adminToken', res.data.token);\n      localStorage.setItem('user', JSON.stringify(res.data.admin));\n      navigate('/admin');\n    } catch (err) {\n      alert('Login failed. Check email/password.');\n      console.error(err);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"admin-login-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      id: \"particles-js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"admin-login-form\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Admin Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleAdminLogin,\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"email\",\n          placeholder: \"Admin Email\",\n          value: email,\n          onChange: e => setEmail(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"password\",\n          placeholder: \"Admin Password\",\n          value: password,\n          onChange: e => setPassword(e.target.value),\n          required: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Not an admin? \", /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/login\",\n          children: \"User Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminLogin, \"OqFWRqNCJ3BNGyYdED5qKBGtbCw=\", false, function () {\n  return [useNavigate];\n});\n_c = AdminLogin;\nexport default AdminLogin;\nvar _c;\n$RefreshReg$(_c, \"AdminLogin\");","map":{"version":3,"names":["React","useState","axios","useNavigate","Link","jsxDEV","_jsxDEV","AdminLogin","_s","email","setEmail","password","setPassword","navigate","handleAdminLogin","e","preventDefault","res","post","localStorage","setItem","data","token","JSON","stringify","admin","err","alert","console","error","className","children","id","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","placeholder","value","onChange","target","required","to","_c","$RefreshReg$"],"sources":["C:/Users/HAZARY/Downloads/mern-web/mern-library/client/src/pages/AdminLogin.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport { useNavigate, Link } from 'react-router-dom';\r\n\r\nconst AdminLogin = () => {\r\n  const [email, setEmail] = useState('');\r\n  const [password, setPassword] = useState('');\r\n  const navigate = useNavigate();\r\n\r\n  const handleAdminLogin = async (e) => {\r\n    e.preventDefault();\r\n    try {\r\n      const res = await axios.post('/api/admin/login', {\r\n        email,\r\n        password\r\n      });\r\n      localStorage.setItem('adminToken', res.data.token);\r\n      localStorage.setItem('user', JSON.stringify(res.data.admin));\r\n      navigate('/admin');\r\n    } catch (err) {\r\n      alert('Login failed. Check email/password.');\r\n      console.error(err);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"admin-login-container\">\r\n      {/* Background Particles */}\r\n      <div id=\"particles-js\"></div>\r\n\r\n      <div className=\"admin-login-form\">\r\n        <h2>Admin Login</h2>\r\n        <form onSubmit={handleAdminLogin}>\r\n          <input\r\n            type=\"email\"\r\n            placeholder=\"Admin Email\"\r\n            value={email}\r\n            onChange={(e) => setEmail(e.target.value)}\r\n            required\r\n          />\r\n          <input\r\n            type=\"password\"\r\n            placeholder=\"Admin Password\"\r\n            value={password}\r\n            onChange={(e) => setPassword(e.target.value)}\r\n            required\r\n          />\r\n          <button type=\"submit\">Login</button>\r\n        </form>\r\n        <p>\r\n          Not an admin? <Link to=\"/login\">User Login</Link>\r\n        </p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AdminLogin;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}